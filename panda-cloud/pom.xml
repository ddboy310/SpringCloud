<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.yukong</groupId>
    <artifactId>panda</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <spring-cloud.version>Finchley.SR1</spring-cloud.version>
        <guava-version>20.0</guava-version>
        <jjwt-version>0.9.0</jjwt-version>
        <mybatis-plus-starter.version>3.0.1</mybatis-plus-starter.version>
        <mysql-connector.version>5.1.46</mysql-connector.version>
        <swagger.version>2.9.2</swagger.version>
        <gson.version>2.8.2</gson.version>
        <spring.serurity.version>5.0.8.RELEASE</spring.serurity.version>
        <qcloudsms.version>1.0.5</qcloudsms.version>
        <docker.repoistory>registry.cn-shanghai.aliyuncs.com</docker.repoistory>
        <docker.registry.name>yukong-panda</docker.registry.name>

    </properties>
    <modules>
        <module>panda-services</module>
        <module>panda-auth</module>
        <module>panda-server</module>
        <module>panda-common</module>
        <module>panda-config-server</module>
        <module>panda-gateway</module>
        <module>panda-zipkin</module>
    </modules>


    <dependencies>
        <!-- 配置服务链路追踪 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-sleuth-zipkin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.0</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <!--新增的docker maven插件-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <!-- 插件绑定phase  即运行 mvn  package 命令会自动构建 docker镜像并且push-->
               <!-- <executions>
                    <execution>
                        <id>build-images</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>-->
                <!--docker镜像相关的配置信息-->
                <configuration>
                    <!-- 私有仓库地址 -->
                    <registryUrl>${docker.repoistory}</registryUrl>
                    <!-- push镜像到私有库 -->
                    <pushImage>true</pushImage>
                    <!--镜像名，这里用工程名-->
                    <imageName>${docker.repoistory}/${docker.registry.name}/${project.artifactId}</imageName>
                    <!--TAG,这里用工程版本号-->
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <dockerDirectory>${project.basedir}/</dockerDirectory>
                    <!--构建镜像的配置信息-->
                    <!-- <resources>
                         <resource>
                             <targetPath>/</targetPath>
                             <directory>${project.build.directory}</directory>
                             <include>${project.build.finalName}.jar</include>
                         </resource>
                     </resources>-->
                    <!-- 私有库账号密码设置 -->
                    <serverId>cn_shanghai_aliyun</serverId>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>